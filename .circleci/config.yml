version: 2
defaults:
  init_environemnt: &init_environment
    run: |
      # Database Creation
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_POSTGRES_USER} WITH PASSWORD '${CKAN_POSTGRES_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      createdb --encoding=utf-8 --host=ckan-postgres --username=ckan --owner=${CKAN_POSTGRES_USER} ${CKAN_POSTGRES_DB}
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_READ_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_READ_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_WRITE_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_WRITE_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      createdb --encoding=utf-8 --host=ckan-postgres --username=ckan --owner=${CKAN_DATASTORE_POSTGRES_WRITE_USER} ${CKAN_DATASTORE_POSTGRES_DB}

      # Database Initialization
      ckan -c test-core-circle-ci.ini datastore set-permissions | psql --host=ckan-postgres --username=ckan
      psql --host=ckan-postgres --username=ckan --dbname=${CKAN_DATASTORE_POSTGRES_DB} --command="CREATE extension tablefunc;"
      ckan -c test-core-circle-ci.ini db init
  install_deps: &install_deps
    run: |
      # OS Dependencies
      apt update
      apt install -y postgresql-client
  run_tests: &run_tests
    # Tests Backend, split across containers by segments
    run: |
      mkdir -p ~/junit/result
      python -m pytest -v --ckan-ini=test-core-circle-ci.ini --cov=ckan --cov=ckanext --junitxml=/root/junit/result/junit.xml --splits 4 --group $((CIRCLE_NODE_INDEX+1)) --splitting-algorithm least_duration

  ckan_env: &ckan_env
    environment:
      CKAN_DATASTORE_POSTGRES_DB: datastore_test
      CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
      CKAN_DATASTORE_POSTGRES_READ_PWD: pass
      CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
      CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
      CKAN_POSTGRES_DB: ckan_test
      CKAN_POSTGRES_USER: ckan_default
      CKAN_POSTGRES_PWD: pass
      PGPASSWORD: ckan
      PYTEST_COMMON_OPTIONS: -v --ckan-ini=test-core-circle-ci.ini --cov=ckan --cov=ckanext --junitxml=/root/junit/result/junit.xml --test-group-count 4  --test-group-random-seed 1
  pg_image: &pg_image
    image: postgres:10
    environment:
      POSTGRES_USER: ckan
      POSTGRES_PASSWORD: ckan
    name: ckan-postgres

  redis_image: &redis_image
    image: redis:3
    name: ckan-redis

  solr_image: &solr_image
    image: ckan/ckan-solr:master
    name: ckan-solr

jobs:
  test-python-3:
    docker:
      - image: python:3.7-bullseye
        <<: *ckan_env
      - <<: *pg_image
      - <<: *redis_image
      - <<: *solr_image

    parallelism: 4

    steps:
      - checkout

      - <<: *install_deps
      - run: |
          # Python Dependencies
          pip install -r requirement-setuptools.txt
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          python setup.py develop
          pip check
      - <<: *init_environment

      # Tests Backend, split across containers by segments
      - <<: *run_tests
      - store_test_results:
          path: ~/junit
      - run: coveralls
workflows:
  version: 2
  build_and_test:
    jobs:
      - test-python-3
