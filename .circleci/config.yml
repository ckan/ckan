version: 2
defaults:
  init_environemnt: &init_environment
    run: |
      # SOLR config
      cp ~/project/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
      service jetty9 restart || true  # erroring out but does seem to work

      # Database Creation
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_POSTGRES_USER} WITH PASSWORD '${CKAN_POSTGRES_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      createdb --encoding=utf-8 --host=ckan-postgres --username=ckan --owner=${CKAN_POSTGRES_USER} ${CKAN_POSTGRES_DB}
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_READ_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_READ_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      psql --host=ckan-postgres --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_WRITE_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_WRITE_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
      createdb --encoding=utf-8 --host=ckan-postgres --username=ckan --owner=${CKAN_DATASTORE_POSTGRES_WRITE_USER} ${CKAN_DATASTORE_POSTGRES_DB}

      # Database Initialization
      ckan -c test-core-circle-ci.ini datastore set-permissions | psql --host=ckan-postgres --username=ckan
      ckan -c test-core-circle-ci.ini db init
  install_deps: &install_deps
    run: |
      # OS Dependencies
      apt update
      case $CIRCLE_NODE_INDEX in
        $NODE_TESTS_CONTAINER)
        curl -sL https://deb.nodesource.com/setup_10.x | bash -
        apt install -y nodejs
        apt install -y libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        npm install
        ;;
      esac
      apt install -y postgresql-client solr-jetty openjdk-8-jdk
  run_tests: &run_tests
    # Tests Backend, split across containers by segments
    run: |
      mkdir -p ~/junit
      case $CIRCLE_NODE_INDEX in
        0) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 1
        ;;
        1) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 2
        ;;
        2) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 3
        ;;
        3) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 4
        ;;
      esac

  # Tests Frontend, only in one container
  start_test_server: &start_test_server
    run:
      command: |
        case $CIRCLE_NODE_INDEX in
          $NODE_TESTS_CONTAINER) ckan -c test-core-circle-ci.ini run
          ;;
        esac
      background: true
  run_front_tests: &run_front_tests
    run:
      command: |
        case $CIRCLE_NODE_INDEX in
          $NODE_TESTS_CONTAINER)
            sleep 5
            $(npm bin)/cypress run
          ;;
        esac
  ckan_env: &ckan_env
    environment:
      CKAN_DATASTORE_POSTGRES_DB: datastore_test
      CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
      CKAN_DATASTORE_POSTGRES_READ_PWD: pass
      CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
      CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
      CKAN_POSTGRES_DB: ckan_test
      CKAN_POSTGRES_USER: ckan_default
      CKAN_POSTGRES_PWD: pass
      PGPASSWORD: ckan
      NODE_TESTS_CONTAINER: 3
      PYTEST_COMMON_OPTIONS: -v --ckan-ini=test-core-circle-ci.ini --cov=ckan --cov=ckanext --junitxml=/root/junit/junit.xml --test-group-count 4  --test-group-random-seed 1
  pg_image: &pg_image
    image: postgres:10
    environment:
      POSTGRES_USER: ckan
      POSTGRES_PASSWORD: ckan
    name: ckan-postgres

  redis_image: &redis_image
    image: redis:3
    name: ckan-redis
jobs:
  test-python-2:
    docker:
      - image: python:2-stretch
        <<: *ckan_env
      - <<: *pg_image
      - <<: *redis_image

    parallelism: 4

    steps:
      - checkout

      - <<: *install_deps
      - run: |
          # Python Dependencies
          pip install -r requirement-setuptools.txt
          pip install -r requirements-py2.txt
          pip install -r dev-requirements.txt
          python setup.py develop
          pip check
      - <<: *init_environment
      - <<: *run_tests
      - store_test_results:
          path: ~/junit
      - <<: *start_test_server
      - <<: *run_front_tests
      - store_artifacts:
          path: ~/project/cypress/screenshots
  test-python-3:
    docker:
      - image: python:3-stretch
        <<: *ckan_env
      - <<: *pg_image
      - <<: *redis_image

    parallelism: 4

    steps:
      - checkout

      - <<: *install_deps
      - run: |
          # Python Dependencies
          pip install -r requirement-setuptools.txt
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          python setup.py develop
          pip check
      - <<: *init_environment

      # Tests Backend, split across containers by segments
      - <<: *run_tests
      - store_test_results:
          path: ~/junit
      - <<: *start_test_server
      - <<: *run_front_tests
      - store_artifacts:
          path: ~/project/cypress/screenshots
      - run: coveralls
workflows:
  version: 2
  build_and_test:
    jobs:
      - test-python-2
      - test-python-3
