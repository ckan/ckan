- PyUtilib dependency removed. All the primitives for the plugin system are now defined in CKAN.
- The deprecated methods with the form ``after_<action>`` and ``before_<action>`` of the :py:class:`~ckan.plugins.interfaces.IPackageController` and :py:class:`~ckan.plugins.interfaces.IResourceController` interfaces have been removed. The form ``after_<type>_<action>`` must be used from now on. E.g. ``after_create()`` -> ``after_dataset_create()`` or ``after_resource_create()``.
- It is now possible to extend interface classes directly when implementing plugins, which provides better integration with development tools, e.g.::

    class Plugin(p.SingletonPlugin, IClick):
        pass

 This is equivalent to::

    class Plugin(p.SingletonPlugin):
        p.implements(p.IClick, inherit=True)

- All plugins need to be instances of p.SingletonPlugin, they can't inherit
  from a base class that is an instance itself. For example, you need to move
  from this::

    class FirstPlugin(p.SingletonPlugin):
        p.implements(ISomething)
        def some_method(self):
            pass

    class SecondPlugin(FirstPlugin):
        p.implements(IAnything)

To this::

    class BasePlugin():
        def some_method(self):
            pass

    class FirstPlugin(p.SingletonPlugin, BasePlugin):
        p.implements(ISomething)

    class SecondPlugin(p.SingletonPlugin, BasePlutin):
        p.implements(IAnything)
