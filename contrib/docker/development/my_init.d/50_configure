#!/bin/sh
set -eu

# URL for the primary database, in the format expected by sqlalchemy (required
# unless linked to a container called 'db')
: ${DATABASE_URL:=}
: ${DATASTORE_WRITE_URL:=}
: ${DATASTORE_READ_URL:=}
# URL for solr (required unless linked to a container called 'solr')
: ${SOLR_URL:=}
# Email to which errors should be sent (optional, default: none)
: ${ERROR_EMAIL:=}

CONFIG="${CKAN_CONFIG}/${CONFIG_FILE}"

abort () {
  echo "$@" >&2
  exit 1
}

write_config () {
  "$CKAN_HOME"/bin/paster --plugin=ckan config-tool "$CONFIG" -e \
      "sqlalchemy.url = ${DATABASE_URL}" \
      "solr_url = ${SOLR_URL}" \
      "ckan.site_url = http://$(hostname -f)/" \
      "ckan.datapusher.formats = csv xls xlsx tsv application/csv application/vnd.ms-excel application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" \
      "ckan.datapusher.url = http://$(hostname -f):8800/" \
      "ckan.storage_path = /var/lib/ckan" \
      "email_to = admin@$(hostname -f)" \
      "error_email_from = ckan@$(hostname -f)" \
      "ckan.datastore.write_url = ${DATASTORE_WRITE_URL}" \
      "ckan.datastore.read_url = ${DATASTORE_READ_URL}" \
      "ckan.plugins = datastore datapusher resource_proxy stats text_view recline_view pdf_view"
  if [ -n "$ERROR_EMAIL" ]; then
    sed -i -e "s&^#email_to.*&email_to = ${ERROR_EMAIL}&" "$CONFIG"
  fi
}

link_postgres_url () {
  local user=$POSTGRES_ENV_CKAN_USER
  local pass=$POSTGRES_ENV_CKAN_PASS
  local db=$POSTGRES_ENV_CKAN_DB
  local host=$POSTGRES_PORT_5432_TCP_ADDR
  local port=$POSTGRES_PORT_5432_TCP_PORT
  echo "postgresql://${user}:${pass}@${host}:${port}/${db}"
}

link_datastore_write_url () {
  local user=$POSTGRES_ENV_CKAN_USER
  local pass=$POSTGRES_ENV_CKAN_PASS
  local db=$POSTGRES_ENV_DATASTORE_DB
  local host=$POSTGRES_PORT_5432_TCP_ADDR
  local port=$POSTGRES_PORT_5432_TCP_PORT
  echo "postgresql://${user}:${pass}@${host}:${port}/${db}"
}

link_datastore_read_url () {
  local user=$POSTGRES_ENV_DATASTORE_USER
  local pass=$POSTGRES_ENV_DATASTORE_PASS
  local db=$POSTGRES_ENV_DATASTORE_DB
  local host=$POSTGRES_PORT_5432_TCP_ADDR
  local port=$POSTGRES_PORT_5432_TCP_PORT
  echo "postgresql://${user}:${pass}@${host}:${port}/${db}"
}

link_solr_url () {
  local host=$SOLR_PORT_8983_TCP_ADDR
  local port=$SOLR_PORT_8983_TCP_PORT
  echo "http://${host}:${port}/solr/ckan"
}

# If we don't already have a virtual environment, create it
if [ ! -d "$CKAN_HOME/lib" ]; then
  virtualenv --no-site-packages $CKAN_HOME
  $CKAN_HOME/bin/pip install -r $CKAN_HOME/src/ckan/requirements.txt
  $CKAN_HOME/bin/pip install -e $CKAN_HOME/src/ckan/
fi

# If we don't already have a who.ini symlink create it
if [ ! -h "$CKAN_CONFIG/who.ini" ]; then
  ln -s $CKAN_HOME/src/ckan/ckan/config/who.ini $CKAN_CONFIG/who.ini
fi

# If we don't already have a config file, bootstrap
if [ ! -e "$CONFIG" ]; then
  "$CKAN_HOME"/bin/paster make-config ckan "$CONFIG"
fi

# We need to override the options everytime because
# if you restart any of the containers it can come back with a different IP
if [ -z "$DATABASE_URL" ]; then
  if ! DATABASE_URL=$(link_postgres_url); then
    abort "no DATABASE_URL specified and linked container called 'postgres' was not found"
  fi
fi
if [ -z "$DATASTORE_WRITE_URL" ]; then
  if ! DATASTORE_WRITE_URL=$(link_datastore_write_url); then
    abort "no DATASTORE_WRITE_URL specified and linked container called 'postgres' was not found"
  fi
fi
if [ -z "$DATASTORE_READ_URL" ]; then
  if ! DATASTORE_READ_URL=$(link_datastore_read_url); then
    abort "no DATASTORE_READ_URL specified and linked container called 'postgres' was not found"
  fi
fi
if [ -z "$SOLR_URL" ]; then
  if ! SOLR_URL=$(link_solr_url); then
    abort "no SOLR_URL specified and linked container called 'solr' was not found"
  fi
fi
# update the config
write_config
